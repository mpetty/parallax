/*!
 *	Parallax Effects
 *
 *	@author		Mitchell Petty <https://github.com/mpetty/parallax>
 *	@version	v1.0.0
 */
!function(l){"use strict";var t={init:function(i){var t=this;if(!window.requestAnimationFrame)return!1;this.images=this.getImages(i),this.scrollingTimer=!1,this.scrolling=!1,this.lastKnownScrollTop=null,this.scrollTimeout=null,this.window=l(window),this.window.on("load scroll",function(){t.lastKnownScrollTop=t.window.scrollTop(),t.scrolling||(t.scrolling=!0,t.doParallax()),clearTimeout(t.scrollingTimer),t.scrollingTimer=setTimeout(l.proxy(t.onScrollEnd,t),300)})},onScrollEnd:function(){this.scrolling=!1},getImages:function(i){for(var t=[],n=0;n<i.length;n++)l(i[n]).addClass("parallax"),t.push({el:l(i[n]),container:l(i[n]).parent(),height:l(i[n]).parent().outerHeight(),speed:l(i[n]).data("parallax")||20});return t},doParallax:function(){900<this.window.width()?(l.each(this.images,l.proxy(this.parallaxAnimation,this)),this.scrolling&&window.requestAnimationFrame(l.proxy(this.doParallax,this))):l.each(this.images,function(i,t){t.el.css({transform:"translateY(0)"})})},parallaxAnimation:function(i,t){var n=t.container.offset().top,l=this.window.height(),a=this.lastKnownScrollTop;n<a+this.window.height()&&a<n+t.height&&(a=(a+(l-t.height)/2-n)/t.speed,t.el.css({transform:"translate3d(0,"+a.toFixed()+"px,0)"}))}};l.fn.parallax=function(i){l.extend(!0,{},l.fn.parallax.defaults,i);return t.init(this),this},l.fn.parallax.defaults={}}(jQuery);